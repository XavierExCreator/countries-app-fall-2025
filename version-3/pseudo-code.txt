---

## ðŸ§  VERSION 3 PSEUDO-CODE WORKSHEET

This is our WHAT, WHEN, WHERE, HOW framework for working with data:

1. WHAT data should we store & retrieve?
   What kind of HTTP request do we need to send, and to what API endpoint?
   If we are sending a POST request, what do we need to send in the request body, and what is the data type?
   What would we get back in the response, and what is the data type?

2. WHEN should we store & retrieve the data?
   What event or user action is the trigger, such as clicking a button, submitting a form, or loading a page?

3. WHERE does this happen in the code?
   What component, page or function?

4. HOW do we accomplish this?
   What steps do we need to take?
   Do we need to...
   - make any GET or POST requests to an API endpoint?
   - render anything in JSX?
   - make any functions? If so, when would we call those functions?
   - use any useState or useEffect hooks?
     Remember: This is pseudo-code. Don't write code yet â€” just outline the actions in plain language.

âœ¨ YOUR TASK: Fill in the answers to each WHAT/WHEN/WHERE/HOW question below for the 3 pieces of data.

---

## ðŸ“Š FORM DATA

---

## ðŸ”¶ STORING FORM DATA

WHAT...
TYPE OF HTTP REQUEST (GET OR POST): **POST**
API ENDPOINT: **/add-one-user**

REQUEST BODY DATA TYPE (if applicable): **Object**
REQUEST BODY (if applicable): ** {
  "name": "Alice",
  "country_name": "Germany",
  "email": "alice@example.com",
  "bio": "A little about Alice"
}**

RESPONSE DATA TYPE: **String**
RESPONSE: **Success! User has been added.**

WHEN: **On submitting the Form**

WHERE: **in the handleSubmit function, in the SavedCountries.jsx file**

HOW:
Step 1: Declare a new function called storeUserData() which should send a POST request to the API to the add-one-user endpoint
Step 2: **\_\_\_**
Step 3: **\_\_\_**
Add more steps as needed!

---

## ðŸ”¶ RETRIEVING FORM DATA

WHAT...
TYPE OF HTTP REQUEST (GET OR POST): **GET**
API ENDPOINT: **/get-newest-user**

REQUEST BODY DATA TYPE (if applicable): **N/A**
REQUEST BODY (if applicable): **N/A**

RESPONSE DATA TYPE: **array object**
RESPONSE: **[
  {
    "user_id": 42,
    "name": "John Smith",
    "country_name": "Canada",
    "email": "john@example.com",
    "bio": "Another bio"
  }
]**

WHEN: **When user loads back on SavedCountries**

WHERE: **in useEffect? At the top of the page?**

HOW:
Step 1: Make a function called â€˜getNewestUser()â€™ that will get the form data from the API by sending a GET request to the /get-newest-user.endpoint
Step 2: Save the form data in a state variable using useState()
Step 3: Call the getNewestUser() on page load in the useEffect()
Step 4: Conditionally render the userâ€™s name in the return statement in (JSX) if the userâ€™s name exists
Add more steps as needed!

---

## ðŸ“Š SAVED COUNTRIES DATA

---

## ðŸ”¶ STORING SAVED COUNTRIES DATA

WHAT...
TYPE OF HTTP REQUEST (GET OR POST): POST
API ENDPOINT: /save-one-country

REQUEST BODY DATA TYPE (if applicable): Object
REQUEST BODY (if applicable): {
  "country_name": "Brazil"
}

RESPONSE DATA TYPE: **string**
RESPONSE: Success! The country is saved

WHEN: When the user clicks the save button in CountryDetails page

WHERE: In the handleSave function in the CountryDetails page. The save button is in the CountryCard

HOW:
Step 1: **Declare a function called handleSave**
Step 2: handleSave will check if savedCountriesData has been saved.
Step 3: If savedCountriesData isn't saved already, it'll run saveCountriesToAPI function
Step 4: That function will have an 'await' feature with the api in it for the saved countries with an endpoint like '/save-one-country'
Step 5:The method will be POST
Step 6: The headers are "'Content-Type': 'application/json',"
Step 7: The body will be stringified to store it properly EX: (body: JSON.stringify({"country_name": countryName}))
Step 8: IF the country has been SAVED initially it will alert the user that the country has already been saved
Add more steps as needed!

---

## ðŸ”¶ RETRIEVING SAVED COUNTRIES DATA

WHAT...
TYPE OF HTTP REQUEST (GET OR POST): **GET**
API ENDPOINT: **/get-all-saved-countries**

REQUEST BODY DATA TYPE (if applicable): **N/A**
REQUEST BODY (if applicable): **N/A**

RESPONSE DATA TYPE: **array objects**
RESPONSE: **[
  {
    "country_name": "Japan"
  },
  {
    "country_name": "Germany"
  }
]**

WHEN: **When user goes to SavedCountries page**

WHERE: **Over the profile page and under 'Saved Countries' header**

HOW:
Step 1: **\_\_\_**
Step 2: **\_\_\_**
Step 3: **\_\_\_**
Add more steps as needed!

---

## ðŸ“Š COUNTRY COUNTS DATA

---

## ðŸ”¶ STORING & RETRIEVING COUNTRY COUNTS DATA

NOTE: We combine storing & retrieving country counts data into one section because they always happen together. Each time we look up a countryâ€™s view count, we also need to increase it and save the new total.

WHAT...
TYPE OF HTTP REQUEST (GET OR POST): **POST**
API ENDPOINT: **/update-one-country-count**

REQUEST BODY DATA TYPE (if applicable): **object**
REQUEST BODY (if applicable): **{
  "country_name": "France"
}**

RESPONSE DATA TYPE: **Object**
RESPONSE: **{
  "count": 3
}**

WHEN: **When the user goes to check and view CountryDetails in useEffect**

WHERE: **In the country's detail page**

HOW:
Step 1: Delcare an async function 'storeAndUpdate'
Step 2: The next line has an await fetch call for the api with the a dynamic country feature and '/update-one-country-count' as th endpoint
Step 3: declare the method, which is POST
Step 4: What will be used for the metadata
Step 5: Wht the body needs
Step 6: 
Add more steps as needed!
